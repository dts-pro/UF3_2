import{_ as o,C as p,c as d,o as c,a4 as r,G as s,j as a,w as i,a as l}from"./chunks/framework.BSovwKcr.js";const E=JSON.parse('{"title":"6. Literals","description":"","frontmatter":{},"headers":[],"relativePath":"6-literals.md","filePath":"6-literals.md"}'),u={name:"6-literals.md"};function h(g,e,m,b,k,v){const t=p("PluginTabsTab"),n=p("PluginTabs");return c(),d("div",null,[e[3]||(e[3]=r('<h1 id="_6-literals" tabindex="-1">6. Literals <a class="header-anchor" href="#_6-literals" aria-label="Permalink to &quot;6. Literals&quot;">​</a></h1><p>A l&#39;hora de tractar amb valors dels tipus de dades simples (i de tipus Strings) s&#39;utilitza el que es denomina &quot;literals&quot;. Els literals són elements que serveixen per a representar un valor en el codi font del programa. A Java existeixen literals per als següents tipus de dades:</p><ul><li>Lògics (boolean)</li><li>Caràcter (char)</li><li>Enters(byte,short, int i long)</li><li>Reals (double i float)</li><li>Cadenes de caràcters (String)</li></ul><h2 id="_6-1-literals-logics" tabindex="-1">6.1. Literals lògics <a class="header-anchor" href="#_6-1-literals-logics" aria-label="Permalink to &quot;6.1. Literals lògics&quot;">​</a></h2><p>Són únicament dos, les paraules reservades true i false. Exemple: <code>boolean activat = false;</code></p><h2 id="_6-2-literals-enters" tabindex="-1">6.2. Literals enters <a class="header-anchor" href="#_6-2-literals-enters" aria-label="Permalink to &quot;6.2. Literals enters&quot;">​</a></h2><p>Els literals de tipus enters (nombres enters): byte, short, int i long poden expressar-se en decimal (base 10), octal (base 8) o hexadecimal (base 16). A més, pot afegir-se al final del mateix la lletra L per a indicar que l&#39;enter és considerat com long (64bits).<br> En Java, el compilador identifica un enter decimal (base 10) en trobar un número el primer dígit del qual és qualsevol símbol decimal excepte el zero (de l&#39;1 al 9). A continuació poden aparéixer dígits del 0 al 9.<br> La lletra L al final d&#39;un literal de tipus sencer pot aplicar-se a qualsevol sistema de numeració i indica que el nombre decimal siga tractat com un enter llarg (de 64 bits). Aquesta lletra L pot ser majúscula o minúscula, encara que és aconsellable utilitzar la majúscula ja que en cas contrari pot confondre&#39;s amb el dígit un (1) en els llistats.</p>',7)),s(n,null,{default:i(()=>[s(t,{label:"Java"},{default:i(()=>e[0]||(e[0]=[a("div",{class:"language-java vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"java"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[a("code",null,[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"long"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," max1 "),a("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 9223372036854775807L"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),a("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//aquest és el valor màxim per a un enter llarg")])])])],-1)])),_:1,__:[0]})]),_:1}),e[4]||(e[4]=r(`<h2 id="_6-3-literals-reals" tabindex="-1">6.3. Literals reals <a class="header-anchor" href="#_6-3-literals-reals" aria-label="Permalink to &quot;6.3. Literals reals&quot;">​</a></h2><p>Els literals de tipus real serveixen per a indicar valors float o double. A diferència dels literals de tipus sencer, <strong>no poden expressar-se en octal o hexadecimal</strong>.<br> Existeixen dos formats de representació: mitjançant la seua part sencera, el punt decimal ( . ) i la part fraccionària; o mitjançant notació exponencial o científica:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>3.1415</span></span>
<span class="line"><span>0.31415e1</span></span>
<span class="line"><span>.31415e1 0.031415E+2</span></span>
<span class="line"><span>.031415e2 314.15e-2</span></span>
<span class="line"><span>31415E-4</span></span></code></pre></div><p>Igual que els literals que representen sencers, es pot posar una lletra com a sufix. Aquesta lletra pot ser una F o una D (majúscula o minúscula indistintament).</p><ul><li>F --&gt; Tracta el literal com de tipus float.</li><li>D --&gt; Tracta el literal com de tipus double.</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>3.1415F</span></span>
<span class="line"><span>.031415d</span></span></code></pre></div><h2 id="_6-4-literals-caracter" tabindex="-1">6.4. Literals caràcter <a class="header-anchor" href="#_6-4-literals-caracter" aria-label="Permalink to &quot;6.4. Literals caràcter&quot;">​</a></h2><p>Els literals de tipus caràcter es representen sempre entre cometes simples. Entre les cometes simples pot aparéixer:</p><ul><li>Un <strong>símbol</strong> (lletra) sempre que el caràcter estiga associat a un codi Unicode. Exemples: ‘a&#39; , ‘B&#39; , ‘{‘ , ‘ñ&#39; , ‘á&#39; .</li><li>Una &quot;<strong>seqüència de fuita</strong>&quot;. Les seqüències de fuita són combinacions del símbol contrabarra \\ seguit d&#39;una lletra, i serveixen per a representar caràcters que no tenen una equivalència en forma de símbol. Les possibles seqüències de fuita són:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\\n // Nova Línia</span></span>
<span class="line"><span>\\t // Tabulador</span></span>
<span class="line"><span>\\r // Reculada de Carro</span></span>
<span class="line"><span>\\f // Començament de Pàgina</span></span>
<span class="line"><span>\\b // Esborrat a l&#39;Esquerra</span></span>
<span class="line"><span>\\\\ // El caràcter barra inversa ( \\ )</span></span>
<span class="line"><span>\\&#39; // El caràcter preval simple ( &#39; )</span></span>
<span class="line"><span>\\&quot; // El caràcter preval doble o bi-prima ( &quot; )</span></span></code></pre></div><p>Per exemple:</p><ul><li>Per a imprimir una diagonal inversa s&#39;utilitza: \\</li><li>Per a imprimir cometes dobles en un String s&#39;utilitza: &quot;</li></ul><h2 id="_6-5-literals-cadenes-string" tabindex="-1">6.5. Literals cadenes (String) <a class="header-anchor" href="#_6-5-literals-cadenes-string" aria-label="Permalink to &quot;6.5. Literals cadenes (String)&quot;">​</a></h2><p>Els Strings o cadenes de caràcters no formen part dels tipus de dades elementals a Java, sinó que són instanciats a partir de la classe java.lang.String, però accepten la seua inicialització a partir de literals d&#39;aquest tipus, per la qual cosa es tracten en aquest punt.</p><p>Un literal de tipus String va tancat entre cometes dobles ( &quot; ) i ha d&#39;estar inclòs completament en una sola línia del programa font (no pot dividir-se en diverses línies).</p><p>Entre les cometes dobles pot incloure&#39;s qualsevol caràcter del codi Unicode (o el seu codi precedit del caràcter \\ ) a més de les seqüències de fuita vistes anteriorment en els literals de tipus caràcter.</p><p>Així, per exemple, per a incloure un canvi de línia dins d&#39;un literal de tipus string haurà de fer-se mitjançant la seqüència de fuita \\n:</p>`,17)),s(n,null,{default:i(()=>[s(t,{label:"Java"},{default:i(()=>e[1]||(e[1]=[a("div",{class:"language-java vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"java"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[a("code",null,[a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"System.out."),a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"println"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Primera línia'),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\n"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Segona línia del string"),a("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\n"),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"'),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); ")]),l(`
`),a("span",{class:"line"},[a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"System.out."),a("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"println"),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),a("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Hola"'),a("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")])])])],-1)])),_:1,__:[1]})]),_:1}),e[5]||(e[5]=a("p",null,"La visualització del string anterior mitjançant println() produiria la següent eixida per pantalla:",-1)),s(n,null,{default:i(()=>[s(t,{label:"Java"},{default:i(()=>e[2]||(e[2]=[a("div",{class:"language-text vp-adaptive-theme"},[a("button",{title:"Copy Code",class:"copy"}),a("span",{class:"lang"},"text"),a("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[a("code",null,[a("span",{class:"line"},[a("span",null,"Primera línia")]),l(`
`),a("span",{class:"line"},[a("span",null,"Segona línia del string")]),l(`
`),a("span",{class:"line"},[a("span")]),l(`
`),a("span",{class:"line"},[a("span",null,"Hola")])])])],-1)])),_:1,__:[2]})]),_:1}),e[6]||(e[6]=r(`<p>La manera d&#39;incloure els caràcters &#39;cometes dobles&#39; <code>&quot;</code> i &#39;contrabarra&#39; <code>\\</code> és mitjançant el seu codi Unicode precedit de <code>\\</code>.</p><p>Si el String és massa llarg i ha de dividir-se en diverses línies en el fitxer font, pot utilitzar-se l&#39;operador de concatenació de Strings <code>+</code> de la següent forma:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;Aquest String és massa llarg per a estar en una línia del&quot;</span></span>
<span class="line"><span>+ &quot;fitxer font i s&#39;ha dividit en dues.&quot;</span></span></code></pre></div>`,3))])}const q=o(u,[["render",h]]);export{E as __pageData,q as default};
